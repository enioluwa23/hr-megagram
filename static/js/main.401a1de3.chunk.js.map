{"version":3,"sources":["components/HRPointer.js","components/HRDiagram.js","components/StarView.js","App.js","serviceWorker.js","index.js"],"names":["HRPointer","props","react_default","a","createElement","className","style","top","position","y","left","x","backgroundColor","color","HRDiagram","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clickPosition","gradient","React","createRef","drawGradient","bind","assertThisInitialized","handleClick","getCanvasPosition","getClickPosition","r","g","b","toString","canvas","current","offsetLeft","offsetTop","offsetParent","parent","event","_this$getCanvasPositi","posX","pageX","posY","pageY","setState","width","height","offsetWidth","offsetHeight","gradientStop","fitToContainer","context","getContext","background","createLinearGradient","addColorStop","fillStyle","fillRect","window","addEventListener","removeEventListener","location","colorData","getImageData","data","_colorData","slicedToArray","concat","rgbToHex","result","onDiagramClick","Fragment","ref","onClick","components_HRPointer","Component","StarView","clickLocation","hex","bigint","parseInt","numStr","_num$toExponential$sp","parseFloat","toExponential","split","map","item","_num$toExponential$sp2","coefficient","exponent","_this$props","description","diameter","starClass","luminosity","temperature","mass","_this$hexToRgb","hexToRgb","slice","_this$numberToBase10E","numberToBase10Exponent","Card","Header","boxShadow","Body","Title","Text","key","App","scale","getStarClass","getStarMass","getStarLuminosity","getStarTemperature","renderStar","yLoc","Math","pow","fractionY","fractionX","cutoff","range","floor","_getLuminosityClass","xLoc","_getStarClass","xPos","base","min","maxIncrease","increase","round","startsWith","_getStarTemperature","_getStarMass","toFixed","mkClass","charAt","lumClass","_this$state","xInt","yInt","getDescription","components_StarView","components_HRDiagram","Boolean","hostname","match","__REACT_DEVTOOLS_GLOBAL_HOOK__","_i","_Object$entries","entries","length","_ref3","_ref2","value","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.401a1de3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HRPointer = (props) => {\n  return (\n    <div\n      className=\"hr-pointer\"\n      style={{\n        top: props.position.y,\n        left: props.position.x,\n        backgroundColor: props.color,\n      }}/>\n  );\n};\n\nHRPointer.propTypes = {\n  position: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default HRPointer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HRPointer from './HRPointer';\n\nclass HRDiagram extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clickPosition: null,\n      color: '#444444',\n    };\n\n    this.gradient = React.createRef();\n    this.drawGradient = this.drawGradient.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getCanvasPosition = this.getCanvasPosition.bind(this);\n    this.getClickPosition = this.getClickPosition.bind(this);\n  }\n\n  rgbToHex(r, g, b) {\n    if (r > 255 || g > 255 || b > 255) {\n      return undefined;\n    }\n    return ((r << 16) | (g << 8) | b).toString(16);\n  }\n\n\n  getCanvasPosition() {\n    const canvas = this.gradient.current;\n    let left = canvas.offsetLeft;\n    let top = canvas.offsetTop;\n\n    if (canvas.offsetParent) {\n      let parent = canvas.offsetParent;\n      while (parent) {\n        left += parent.offsetLeft;\n        top += parent.offsetTop;\n        parent = parent.offsetParent;\n      }\n      return { x: left, y: top };\n    }\n\n    return undefined;\n  }\n\n  getClickPosition(event) {\n    const { x, y } = this.getCanvasPosition();\n    const posX = event.pageX - x;\n    const posY = event.pageY - y;\n    this.setState({ clickPosition: { x: event.pageX - 15, y: event.pageY - y + 5 } });\n    return { x: posX, y: posY };\n  }\n\n  fitToContainer(canvas) {\n    canvas.style.width='100%';\n    canvas.style.height='100%';\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n    return { width: canvas.width, height: canvas.height };\n  }\n\n  drawGradient() {\n    const canvas = this.gradient.current;\n    const { width } = this.fitToContainer(canvas);\n    const gradientStop = width / 1.1;\n    const context = canvas.getContext('2d');\n    const background = context.createLinearGradient(0, 0, gradientStop, 0);\n    background.addColorStop(0, '#16348e');\n    background.addColorStop(.4, '#61c9fc');\n    background.addColorStop(.6, '#ffffff');\n    background.addColorStop(.75, '#fae729');\n    background.addColorStop(.9, '#fa6c0a');\n    background.addColorStop(1.0, '#fc0c00');\n    context.fillStyle = background;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  }\n\n  componentDidMount() {\n    this.drawGradient();\n    window.addEventListener('resize', this.drawGradient);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.drawGradient);\n  }\n\n  handleClick(event) {\n    const canvas = this.gradient.current;\n    const location = this.getClickPosition(event);\n    const { x, y } = location;\n    const context = canvas.getContext('2d');\n    const colorData = context.getImageData(x, y, 1, 1).data;\n    const [r, g, b] = colorData;\n    const color = `#${this.rgbToHex(r, g, b)}`;\n    this.setState({ color });\n    const result = { color, location, width: this.gradient.current.width };\n    this.props.onDiagramClick(result);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"hr-diagram\">\n          <canvas\n            className=\"hr-gradient\"\n            ref={this.gradient}\n            onClick={this.handleClick}>\n          </canvas>\n          {this.state.clickPosition &&\n        <HRPointer position={this.state.clickPosition} color={this.state.color}/>}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nHRDiagram.propTypes = {\n  onDiagramClick: PropTypes.func.isRequired,\n};\n\nexport default HRDiagram;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\n\nclass StarView extends React.Component {\n  handleClick(data) {\n    this.setState({ clickLocation: data.location, color: data.color });\n  }\n\n  hexToRgb(hex) {\n    const bigint = parseInt(hex, 16);\n    const r = (bigint >> 16) & 255;\n    const g = (bigint >> 8) & 255;\n    const b = bigint & 255;\n\n    return { r, b, g };\n  }\n\n  numberToBase10Exponent(numStr) {\n    const num = parseFloat(numStr);\n    const [coefficient, exponent] = num.toExponential().split('e').map((item) => parseFloat(item));\n    return { coefficient, exponent };\n  }\n\n  render() {\n    const { color, description, diameter, starClass, luminosity, temperature, mass } = this.props;\n    const { r, g, b } = this.hexToRgb(color.slice(1));\n    let { coefficient, exponent } = this.numberToBase10Exponent(luminosity);\n    coefficient = coefficient.toString().slice(0, 4);\n\n    return (\n      <Card className=\"star-view\">\n        <Card.Header className=\"star-visual-backdrop\">\n          <div className=\"star-visual\"\n            style={{\n              backgroundColor: color,\n              width: diameter,\n              height: diameter,\n              boxShadow: `0 0 5px 5px rgba(${r},${g},${b},0.5)`,\n            }}/>\n        </Card.Header>\n        <Card.Body className=\"star-info\">\n          <Card.Title>{`${starClass} Star`}</Card.Title>\n          <Card.Text key=\"description\"><strong>Description: </strong>{description}</Card.Text>\n          <Card.Text key=\"mass\"><strong>Mass: </strong>{`${mass}M`}<sub>☉</sub>\n          </Card.Text>\n          <Card.Text key=\"luminosity\">\n            <strong>Luminosity: </strong>{`${coefficient} x `}10<sup>{exponent}</sup>L<sub>☉</sub>\n          </Card.Text>\n          <Card.Text key=\"temperature\">\n            <strong>Temperature: </strong>{`${temperature}K`}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n};\n\nStarView.propTypes = {\n  color: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  diameter: PropTypes.number.isRequired,\n  starClass: PropTypes.string.isRequired,\n  luminosity: PropTypes.number.isRequired,\n  temperature: PropTypes.number.isRequired,\n  mass: PropTypes.number.isRequired,\n};\n\nexport default StarView;\n","import React from 'react';\nimport './App.css';\nimport HRDiagram from './components/HRDiagram';\nimport StarView from './components/StarView';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clickLocation: null,\n      color: null,\n      scale: null,\n    };\n\n    this.getStarClass = this.getStarClass.bind(this);\n    this.getStarMass = this.getStarMass.bind(this);\n    this.getStarLuminosity = this.getStarLuminosity.bind(this);\n    this.getStarTemperature = this.getStarTemperature.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderStar = this.renderStar.bind(this);\n  }\n\n  handleClick(data) {\n    this.setState({\n      clickLocation: data.location,\n      color: data.color,\n      scale: data.width,\n    });\n  }\n\n  getStarLuminosity(yLoc) {\n    const scale = parseFloat(this.state.scale);\n    return Math.pow(10, -5.05 + (11.4 * (yLoc / scale)));\n  }\n\n  _getLuminosityClass(fractionY) {\n    if (fractionY < 45/142) {\n      return 'D';\n    } else if (fractionY < 59/142) {\n      return 'VI';\n    } else if (fractionY < 73/142) {\n      return 'V';\n    } else if (fractionY < 83/142) {\n      return 'IV';\n    } else if (fractionY < 92/142) {\n      return 'III';\n    } else if (fractionY < 102/142) {\n      return 'II';\n    } else if (fractionY < 116/142) {\n      return 'Ib';\n    } else if (fractionY < 132/142) {\n      return 'Ia';\n    } else {\n      return 'Ia-O';\n    }\n  }\n\n  _getStarClass(fractionX, fractionY, cutoff, range) {\n    const mkClass = Math.floor((fractionX - cutoff) * ((79 * 9)/range) + 1).toString();\n    const lumClass = this._getLuminosityClass(fractionY);\n    return mkClass + lumClass;\n  }\n\n  getStarClass(xLoc, yLoc) {\n    const { scale } = this.state;\n    const fractionX = xLoc / scale;\n    const fractionY = yLoc / scale;\n\n    if (fractionX < 18/79) {\n      return 'O' + this._getStarClass(fractionX, fractionY, 0, 18);\n    } else if (fractionX < 39/79) {\n      return 'B' + this._getStarClass(fractionX, fractionY, 18/79, 21);\n    } else if (fractionX < 46/79) {\n      return 'A' + this._getStarClass(fractionX, fractionY, 39/79, 7);\n    } else if (fractionX < 50/79) {\n      return 'F' + this._getStarClass(fractionX, fractionY, 46/79, 4);\n    } else if (fractionX < 58/79) {\n      return 'G' + this._getStarClass(fractionX, fractionY, 50/79, 8);\n    } else if (fractionX < 67/79) {\n      return 'K' + this._getStarClass(fractionX, fractionY, 58/79, 9);\n    } else {\n      return 'M' + this._getStarClass(fractionX, fractionY, 67/79, 12);\n    }\n  }\n\n  _getStarTemperature(scale, xPos, base, range, min, maxIncrease) {\n    const offset = xPos - (base * scale);\n    const increase = maxIncrease * (offset /(range * scale));\n    return Math.round(min + increase);\n  }\n\n  getStarTemperature(xLoc, starClass) {\n    const { scale } = this.state;\n    const xPos = scale - xLoc;\n\n    if (starClass.startsWith('O')) {\n      return this._getStarTemperature(scale, xPos, 61/79, 18/79, 28000, 22000);\n    } else if (starClass.startsWith('B')) {\n      return this._getStarTemperature(scale, xPos, 40/79, 21/79, 10000, 18000);\n    } else if (starClass.startsWith('A')) {\n      return this._getStarTemperature(scale, xPos, 33/79, 7/79, 7500, 2500);\n    } else if (starClass.startsWith('F')) {\n      return this._getStarTemperature(scale, xPos, 29/79, 4/79, 6000, 1500);\n    } else if (starClass.startsWith('G')) {\n      return this._getStarTemperature(scale, xPos, 21/79, 8/79, 5000, 1000);\n    } else if (starClass.startsWith('K')) {\n      return this._getStarTemperature(scale, xPos, 12/79, 9/79, 3500, 1500);\n    } else if (starClass.startsWith('M')) {\n      return this._getStarTemperature(scale, xPos, 0, 12/79, 1300, 2200);\n    }\n  }\n\n  _getStarMass(fractionY, base, range, min, maxIncrease) {\n    return min + ((fractionY - base) * (128/range) * maxIncrease);\n  }\n\n  getStarMass(yLoc) {\n    const { scale } = this.state;\n    const fractionY = yLoc / scale;\n    if (fractionY < 30/128) {\n      return this._getStarMass(fractionY, 0, 30, 0, 0.1).toFixed(1);\n    } else if (fractionY < 40/128) {\n      return this._getStarMass(fractionY, 30/128, 10, 0.1, 0.2).toFixed(1);\n    } else if (fractionY < 56/128) {\n      return this._getStarMass(fractionY, 40/128, 12, 0.3, 0.7).toFixed(1);\n    } else if (fractionY < 64/128) {\n      return this._getStarMass(fractionY, 56/128, 8, 1, 0.5).toFixed(1);\n    } else if (fractionY < 79/128) {\n      return this._getStarMass(fractionY, 64/128, 15, 1.5, 1.5).toFixed(1);\n    } else if (fractionY < 89/128) {\n      return this._getStarMass(fractionY, 79/128, 10, 3.0, 3.0).toFixed(1);\n    } else if (fractionY < 100/128) {\n      return this._getStarMass(fractionY, 89/128, 11, 6.0, 4.0).toFixed(1);\n    } else if (fractionY < 117/128) {\n      return this._getStarMass(fractionY, 100/128, 17, 10.0, 20.0).toFixed(1);\n    } else if (fractionY < 122/128) {\n      return this._getStarMass(fractionY, 117/128, 5, 30.0, 60.0).toFixed(1);\n    } else {\n      return this._getStarMass(fractionY, 122/128, 6, 60.0, 240.0).toFixed(1);\n    }\n  }\n\n  getDescription(starClass) {\n    const mkClass = starClass.charAt(0);\n    const lumClass = starClass.slice(2);\n    let description = '';\n    switch (mkClass) {\n    case 'O': description += 'Blue'; break;\n    case 'B': description += 'Blue-White'; break;\n    case 'A': description += 'White'; break;\n    case 'F': description += 'Yellow-White'; break;\n    case 'G': description += 'Yellow'; break;\n    case 'K': description += 'Orange'; break;\n    case 'M': description += 'Red'; break;\n    default: break;\n    }\n\n    description += ' ';\n\n    switch (lumClass) {\n    case 'D':\n    case 'VI': description += 'Subdwarf'; break;\n    case 'V': description += 'Main-Sequence/Dwarf Star'; break;\n    case 'IV': description += 'Subgiant Star'; break;\n    case 'III': description += 'Giant Star'; break;\n    case 'II': description += 'Bright Giant'; break;\n    case 'Ib': description += 'Supergiant'; break;\n    case 'Ia': description += 'Luminous Supergiant'; break;\n    case 'Ia-O': description += 'Hypergiant'; break;\n    default: break;\n    }\n\n    return description;\n  }\n\n  renderStar() {\n    const { color, clickLocation, scale } = this.state;\n    if (!color || !clickLocation) {\n      return null;\n    }\n\n    const { x, y } = clickLocation;\n    const xInt = parseInt(x);\n    const yInt = scale - parseInt(y);\n    const diameter = 0.6 * (0.4 * xInt + yInt) + 25;\n    const luminosity = this.getStarLuminosity(yInt);\n    const starClass = this.getStarClass(xInt, yInt);\n    const temperature = this.getStarTemperature(xInt, starClass);\n    const description = this.getDescription(starClass);\n    const mass = parseFloat(this.getStarMass(yInt));\n\n    const props = {\n      color,\n      description,\n      diameter,\n      temperature,\n      luminosity,\n      starClass,\n      mass,\n    };\n\n    return <StarView {...props}/>;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">HR Digaram Visualizer</h1>\n        <div className=\"diagram-container\">\n          <HRDiagram\n            onDiagramClick={this.handleClick}\n          />\n        </div>\n        <div className=\"star-container\">\n          {this.state.color && this.renderStar()}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Disable React Dev Tools\nif (process.env.NODE_ENV === 'production') {\n  if (typeof window.__REACT_DEVTOOLS_GLOBAL_HOOK__ === 'object') {\n    for (const [key, value] of Object.entries(window.__REACT_DEVTOOLS_GLOBAL_HOOK__)) {\n      window.__REACT_DEVTOOLS_GLOBAL_HOOK__[key] = typeof value == 'function' ? ()=>{} : null;\n    }\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}